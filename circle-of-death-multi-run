# 100 people stand in a circle.
# Number 1 has a sword.
# He kills the next person (i.e. Number 2) and gives the sword to the next living person (i.e. Number 3).
# Everyone does the same until only 1 survives.
# Who survives?
# What if the circle was 150 people, or 273 people?

import time
num_runs = 210

# function to remove the next person


def remove_next(list, element):
    list.remove(list[list.index(element)+1])
    return (list)


# function to cycle current person to the end of the list
def cycle_list(list, element):
    # remove from the front
    list.remove(element)
    # append to the end
    list.append(element)


# function to run the challenge
def the_challenge(mylist):
    # while the list has more than one person in it
    while len(mylist) > 1:
        for person in mylist:
            # remove the next person
            remove_next(mylist, person)
            # move current person to end of list
            cycle_list(mylist, person)
            break

    return mylist


# function to run the challenge many times up to a certain circle size (var = num_runs)
def collect_patterns(num_runs):
    # empty list collects the starting size of each cirlce
    collect_circle = []
    # empty list collects the survivor of each challenge
    collect_survivors = []
    # number of times we will run the challenge

    # for each number in num_runs
    for num in range(1, num_runs+1):
        # create a list the length of num
        mylist = list(range(1, num+1, 1))
        # run the challenge
        the_challenge(mylist)
        # add the start number to the collection
        collect_circle.append(num)
        # add the survivor number to the collection
        collect_survivors.append(mylist.pop())

    print(collect_circle)
    print(collect_survivors)
    return collect_circle, collect_survivors


if __name__ == "__main__":                                              # start the programme
    # set the start time
    start = time.time()
    # run the challenge
    collect_patterns(num_runs)
    # time now - start time rounded to 6 decimal points
    print("{} runs took {} seconds".format(
        num_runs, round(time.time()-start), 6))
